image:
  tag: release-${DAEMON_VERSION}
  pullPolicy: IfNotPresent

automatixCount: 0
abacusAccountCount: 3
abacusRseCount: 3
abacusCollectionReplicaCount: 3
conveyorTransferSubmitterCount: 3
conveyorPollerCount: 3
conveyorFinisherCount: 3
conveyorReceiverCount: 3
conveyorThrottlerCount: 3
darkReaperCount: 0
hermesCount: 1
hermes2Count: 2
judgeCleanerCount: 3
judgeEvaluatorCount: 3
judgeInjectorCount: 3
judgeRepairerCount: 3
tracerKronosCount: 1
transmogrifierCount: 2
undertakerCount: 1
reaper2Count: 0
reaperCount: 3
minosCount: 1
necromancerCount: 1
undertakerCount: 1


monitoring:
  enabled: false
  serviceMonitorEnabled: true
  exporterPort: 8080
  targetPort: 8080
  interval: 30s
  telemetryPath: /metrics
  namespace: ${K8S_NAMESPACE}
  labels:
    release: prometheus-operator
    
automatix:
  threads: 1
  inputFile: "/opt/rucio/etc/automatix.json"
  resources:
    limits:
      memory: "200Mi"
      cpu: "300m"
    requests:
      memory: "100Mi"
      cpu: "100m"

abacusAccount:
  threads: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "256Mi"
      cpu: "50m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

abacusCollectionReplica:
  threads: 5
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "256Mi"
      cpu: "50m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

abacusRse:
  threads: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "256Mi"
      cpu: "50m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

undertaker:
  threads: 1
  resources:
    limits:
      memory: "200Mi"
      cpu: "700m"
    requests:
      memory: "200Mi"
      cpu: "700m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

reaper:
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 50m
      memory: 128Mi
  greedy: 1
  totalWorkers: 2
  threadsPerWorker: 2
  threads: 5
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

reaper2:
  greedy: 1
  threads: 5
  totalWorkers: 2
  threadsPerWorker: 2
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

undertaker:
  threads: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "256Mi"
      cpu: "50m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

conveyorTransferSubmitter:
  threads: 1
  sleepTime: 10
  groupBulk: 500
  activities: "'Analysis Input' 'Analysis Output' 'Data Brokering' 'Data Consolidation' 'Data rebalancing' 'Debug' 'Express' 'Functional Test' 'Group Subscriptions' 'Production Input' 'Production Output' 'Recovery' 'Staging' 'T0 Export' 'T0 Export' 'T0 Tape' 'User Subscriptions' 'default'"
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

conveyorPoller:
  activities: "'Analysis Input' 'Analysis Output' 'Data Brokering' 'Data Consolidation' 'Data rebalancing' 'Debug' 'Express' 'Functional Test' 'Functional Test XrootD' 'Functional Test WebDAV' 'Group Subscriptions' 'Production Input' 'Production Output' 'Recovery' 'Staging' 'T0 Export' 'T0 Export' 'T0 Tape' 'Upload/Download (Job)' 'Upload/Download (User)' 'User Subscriptions' 'default'"
  threads: 2
  sleepTime: 10
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

conveyorFinisher:
  threads: 2
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

conveyorReceiver:
  threads: 2
  resources:
    limits:
      memory: "300Mi"
      cpu: "300m"
    requests:
      memory: "200Mi"
      cpu: "200m"

conveyorThrottler:
  threads: 1
  resources:
    limits:
      memory: "300Mi"
      cpu: "200m"
    requests:
       memory: "100Mi"
       cpu: "100m"

darkReaper:
  workers: 1
  includeRses: "(type=CALIBDISK|type=DATADISK|type=GROUPDISK|type=LOCALGROUPDISK|type=SCRATCHDISK)"
  resources:
    limits:
      memory: "300Mi"
      cpu: "300m"
    requests:
      memory: "200Mi"
      cpu: "300m"

judgeCleaner:
  threads: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

judgeEvaluator:
  threads: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

hermes:
  threads: 2
  bulk: 100
  delay: 5
  brokerTimeout: 3
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

hermes2:
  threads: 1
  bulk: 100
  resources:
    limits:
      memory: "200Mi"
      cpu: "300m"
    requests:
      memory: "200Mi"
      cpu: "250m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

judgeRepairer:
  threads: 4
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

judgeInjector:
  threads: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

ftsRenewal:
  enabled: 1
  schedule: "12 */6 * * *"
  image:
    repository: rucio/fts-cron
    tag: latest
  servers: ${FTS_NAME}

transmogrifierResources:
    requests:
      memory: 200Mi
    limits:
      memory: 1450Mi

tracerKronos:
  resources:
    limits:
      cpu: 300m 
    requests:
      cpu: 250m 
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

judgeEvaluator: 
  resources:
    limits:
      cpu: 3750m 
    requests:
      cpu: 750m 
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

judgeCleaner:
  threads: 2
  resources:
    limits:
      cpu: 350m 
      memory: 2000Mi
    requests:
      cpu: 350m 
      memory: 200Mi
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

judgeRepairer:
  resources:
    limits:
      cpu: 3750m 
    requests:
      cpu: 750m 
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"

minos:
  threads: 1
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
  resources:
    limits:
      memory: "200Mi"
      cpu: "350m"
    requests:
      memory: "100Mi"
      cpu: "100m"

minosTemporaryExpiration:
  threads: 1
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
  resources:
    limits:
      memory: "200Mi"
      cpu: "350m"
    requests:
      memory: "100Mi"
      cpu: "100m"

necromancer:
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
  resources:
    limits:
      memory: "200Mi"
      cpu: "350m"
    requests:
      memory: "100Mi"
      cpu: "100m"

additionalSecrets:
  x509up:
    secretName: rucio-x509up-reaper
    mountPath: /opt/proxy/x509up.pem
    subPaths: 
      - x509up.pem

  configuration:
    secretName: rucio-cfg
    mountPath: /opt/rucio/etc/
    subPaths: 
      - rucio.cfg

  hermes2:
    secretName: hermes2-script
    mountPath: /usr/local/lib/python3.6/site-packages/rucio/daemons/hermes/
    subPaths: 
      - hermes2.py

automaticRestart:
  enabled: 1
  image:
    repository: bitnami/kubectl
    tag: 1.18
    pullPolicy: IfNotPresent
  schedule: "5 1 * * *"


