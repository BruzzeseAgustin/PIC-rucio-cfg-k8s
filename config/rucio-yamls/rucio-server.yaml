image:
  repository: rucio/rucio-server
  tag: release-${SERVER_VERSION}
  pullPolicy: IfNotPresent

# For NGINX ingress. Eventually becomes plain server
replicaCount: 1
authReplicaCount: 1
traceReplicaCount: 0

monitoring:
  enabled: false
  exporterPort: 8080
  targetPort: 8080
  interval: 10s
  telemetryPath: /metrics
  namespace: ${K8S_NAMESPACE}
  labels:
    apps: prometheus

automaticRestart:
  enabled: 1
  image:
    repository: bitnami/kubectl
    tag: 1.18
    pullPolicy: IfNotPresent
  schedule: "5 1 * * *"
  
exposeErrorLogs:
  server: True
  authServer: True
  traceServer: True

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1

# Use http worker mode and elsewhere configure database connections for Oracle Database Resident Connection Pool (DRCP)
httpd_config:
  encoded_slashes: "True"
  mpm_mode: "event"
  enable_status: "True"
  keep_alive: "On"
  keep_alive_timeout: "5"
  max_keep_alive_requests: "128"
  server_limit: "10"
  start_servers: "4"
  thread_limit: "128"
  threads_per_child: "128"
  min_spare_threads: "256"
  max_spare_threads: "512"
  max_request_workers: "1280"
  max_connections_per_child: "2048"

service:
  type: NodePort
  port: 80
  targetPort: 80
  protocol: TCP
  name: http
  annotations: {}

authService:
  type: NodePort
  port: 80
  targetPort: 80
  protocol: TCP
  name: http
  annotations: {}


ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/frontend-entry-points: http, https
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  ingressClassName: ${NGINX_NAME}
  path: /
  hosts:
    - ${SERVER_HOST_NAME}
  tls: 
    - secretName: rucio-server.tls-secret

# Auth server runs on 443 and needs the connection forwarded straight through

useSSL:
  Server: True
  authServer: False
  traceServer: False

authIngress:
  enabled: true
  annotations: 
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  ingressClassName: ${NGINX_NAME}
  path: /
  hosts: 
    - ${AUTH_HOST_NAME}
  tls:
    - secretName: rucio-server.tls-secret

resources:
  requests:
    memory: 2500Mi
  limits:
    memory: 2500Mi

livenessProbe:
  server:
    initialDelaySeconds: 10
    periodSeconds: 20
    timeoutSeconds: 5
  authServer:
    initialDelaySeconds: 10
    periodSeconds: 20
    timeoutSeconds: 5
  traceServer:
    initialDelaySeconds: 10
    periodSeconds: 20
    timeoutSeconds: 5

serverType:
  server: api
  authServer: auth
  traceServer: trace

logFormat:
  server: '[%{%Y-%m-%d %H:%M:%S}t]\t%v\t%h\t%{X-Forwarded-For}i\t%{X-Rucio-RequestId}i\t%>s\t%I\t%B\t%D\t\"%r\"\t\"%{X-Rucio-Auth-Token}i\"\t\"%{User-Agent}i\"\t%{X-Rucio-Script}i'
  authServer: '[%{%Y-%m-%d %H:%M:%S}t]\t%v\t%h\t%{X-Forwarded-For}i\t%{X-Rucio-RequestId}i\t%>s\t%I\t%B\t%D\t\"%r\"\t\"%{X-Rucio-Auth-Token}i\"\t\"%{User-Agent}i\"\t%{X-Rucio-Script}i'
  traceServer: '[%{%Y-%m-%d %H:%M:%S}t]\t%v\t%h\t%{X-Forwarded-For}i\t%{X-Rucio-RequestId}i\t%>s\t%I\t%B\t%D\t\"%r\"\t\"%{X-Rucio-Auth-Token}i\"\t\"%{User-Agent}i\"\t%{X-Rucio-Script}i'

wsgi:
  daemonProcesses: "4"
  daemonThreads: "4"

ftsRenewal:
  enabled: 0
  schedule: "42 */6 * * *"
  image:
    repository: rucio/fts-cron
    tag: latest
    pullPolicy: Always
  vo: "pic"
  voms: "pic:/pic/Role=production"
  servers: ${FTS_NAME}

additionalSecrets:
  policy:
    secretName: permission
    mountPath: /usr/local/lib/python3.6/site-packages/rucio/core/permission/
    subPaths: 
      - pic.py
  schema:
    secretName: schema
    mountPath: /usr/local/lib/python3.6/site-packages/rucio/common/schema/
    subPaths: 
      - pic.py

  mail-templates:
    secretName: mail-templates
    mountPath: /opt/rucio/etc/mail_templates/
    subPaths:
      - rule_ok_notification.tmpl
      - rule_approval_request.tmpl
      - rule_approved_admin.tmpl
      - rule_approved_user.tmpl
      - rule_denied_admin.tmpl
      - rule_denied_user.tmpl

  configuration:
    secretName: rucio-cfg
    mountPath: /opt/rucio/etc/rucio.cfg
    subPath: rucio.cfg



