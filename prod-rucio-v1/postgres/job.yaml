---
apiVersion: batch/v1
kind: Job
metadata:
  name: rucio-db-backup
  labels:
    tier: data
spec:
  ttlSecondsAfterFinished: 10
  template:
    spec:
      containers:
      - name: postgres
        image: postgres:11
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args: ["-c", 'echo "$(RUCIO_DB_HOST) -U $(POSTGRES_USER) $(POSTGRES_DB)" && ls -l /var/backups/ && pg_dump -h $(RUCIO_DB_HOST) -U $(POSTGRES_USER) $(POSTGRES_DB) > $(RUCIO_DB_DUMP).`date +%Y-%m-%d-%H-%M`']
        volumeMounts:
        - mountPath: /var/backups
          name: postgredb
        env:
        - name: RUCIO_DB_HOST
          value: rucio-db-mirror
          # valueFrom:
          #   configMapKeyRef:
          #     name: rucio-db-hostname
          #     key: RUCIO_DB
        - name: POSTGRES_DB
          value: rucio
        - name: POSTGRES_USER
          value: rucio
        - name: PGPASSWORD
          value: secret
          # valueFrom:
          #   secretKeyRef:
          #     name: rucio-db
          #     key: password
        - name: RUCIO_DB_DUMP
          value: /var/backups/rucio-db.dump
          # valueFrom:
          #   configMapKeyRef:
          #     name: rucio-db-dump
          #     key: RUCIO_DB_DUMP
      volumes:
      - name: postgredb
        # persistentVolumeClaim:
        #   claimName: postgres-pv-claim
        hostPath:
          # Ensure the file directory is created.
          path: /var/volumes/postgres-backups
          type: DirectoryOrCreate
      restartPolicy: OnFailure

