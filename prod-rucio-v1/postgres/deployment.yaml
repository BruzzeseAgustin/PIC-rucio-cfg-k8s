---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rucio-db-mirror
  labels:
    app: postgres
    tier: data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        tier: data
    spec:
      volumes:
      - name: postgresdb
        persistentVolumeClaim:
          claimName: postgres-pv-claim
      - name: pg-data
        emptyDir: {}
      nodeSelector:
        node: rucio
      containers:
      - name: postgres
        image: postgres:latest
        imagePullPolicy: IfNotPresent
        args: ["postgres", "-p 5432"]

        envFrom:
          - configMapRef:
              name: postgres-config
        env:
        - name: POSTGRES_DB
          value: rucio
        - name: PGDATA
          value: /var/lib/postgresql/data
        - name: POSTGRES_USER
          value: rucio
        - name: POSTGRES_PASSWORD
          value: secret
        - name: RUCIO_DB_DUMP
          value: /rucio-pic/rucio-backups/rucio-db.dump
          # valueFrom:
          #   configMapKeyRef:
          #     name: rucio-db-dump
          #     key: RUCIO_DB_DUMP
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "1000"
        # - name:  PGOPTIONS
        #   value: "-c max_connections=1000  -c shared_buffers=1024MB"
        # - name: POSTGRES_OPTIONS
        #   value: "-c max_connections=1000  -c shared_buffers=1024MB"
        # - name:  PG_OPTIONS
        #  value: "-c max_connections=1000  -c shared_buffers=1024MB"
        - name: MAX_CONNECTIONS
          value: "1000"
        ports:
        - containerPort: 5432 
        volumeMounts:
        - name: postgresdb
          mountPath: /mnt/rucio-pic
        - name: pg-data
          mountPath: /var/lib/postgresql/data

