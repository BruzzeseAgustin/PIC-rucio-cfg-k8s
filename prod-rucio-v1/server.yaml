image:
  repository: rucio/rucio-server
  tag: release-1.24.2

# For NGINX ingress. Eventually becomes plain server
replicaCount: 1
authReplicaCount: 1
traceReplicaCount: 0

monitoring:
  enabled: true
  exporterPort: 9090
  targetPort: 9090
  interval: 10s
  telemetryPath: /metrics
  namespace: monitoring
  labels:
    apps: prometheus

exposeErrorLogs:
  server: True
  authServer: True
  traceServer: True

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1

automaticRestart:
  enabled: 1
  image:
    repository: bitnami/kubectl
    tag: 1.18
    pullPolicy: IfNotPresent
  schedule: "5 1 * * *"

# Use http worker mode and elsewhere configure database connections for Oracle Database Resident Connection Pool (DRCP)
httpd_config:
  encoded_slashes: "True"
  mpm_mode: "event"
  enable_status: "True"
  keep_alive: "On"
  keep_alive_timeout: "5"
  max_keep_alive_requests: "128"
  server_limit: "10"
  start_servers: "4"
  thread_limit: "128"
  threads_per_child: "128"
  min_spare_threads: "256"
  max_spare_threads: "512"
  max_request_workers: "1280"
  max_connections_per_child: "2048"

Service:
  # type: ClusterIP
  type: NodePort
  port: 443
  targetPort: 443
  protocol: TCP
  name: https

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/frontend-entry-points: http, https
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  path: /
  hosts:
    - pic01-rucio-server.pic.es
  tls: 
    - secretName: rucio-server.tls-secret

# Auth server runs on 443 and needs the connection forwarded straight through

useSSL:
  Server: True
  authServer: False

authIngress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/frontend-entry-points: http, https
    #nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  path: /
  hosts: 
    - pic01-rucio-server-auth.pic.es
  tls:
    - secretName: rucio-server.tls-secret

resources:
  requests:
    memory: 2500Mi
  limits:
    memory: 2500Mi

additionalSecrets:
  policy:
    secretName: permission
    mountPath: /usr/local/lib/python3.6/site-packages/rucio/core/permission/pic.py
    subPath: pic.py
  schema:
    secretName: schema
    mountPath: /usr/local/lib/python3.6/site-packages/rucio/common/schema/pic.py
    subPath: pic.py
  usercert:
    secretName: usercert-with-key
    mountPath: /opt/rucio/etc/usercert_with_key.pem
    subPath: usercert_with_key.pem

config:
  conveyor:
    scheme: "gsiftp,root,https,davs,srm,http"
    transfertool: "fts3"
    ftshosts: "https://fts01.pic.es:8446"
    cacert: "/opt/certs/ca.pem"
    usercert: "/opt/proxy/x509up"

  database:
    default: "postgresql://rucio:secret@rucio-db-mirror/rucio"
    schema: "pic01-rucio"

  policy:
    permission: "pic"
    schema: "pic"
    lfn2pfn_algorithm_default: "identity" 

  webui:
    usercert: "/opt/rucio/etc/usercert_with_key.pem"

  messaging_hermes:
    username: "hermes"
    password: "supersecret"
    port: "61616"
    nonssl_port: "61616"
    use_ssl: "false"
    destination: "/queue/events"
    ssl_key_file: "/opt/x509/hostkey.pem"
    ssl_cert_file: "/opt/x509/hostcert.pem"
    brokers: "activemq"
    email_from: "bruzzese@pic.es"
    email_test: "bruzzese@pic.es" 

  trace:
    tracedir: "/var/log/rucio/trace"
    brokers: "activemq"
    port: "61616"
    username: "hermes"
    password: "supersecret"
    topic: "/topic/rucio.tracer"

  monitor:
    carbon_server: "graphite-test.pic.es"
    carbon_port: "2014"
    user_scope: "rucio"
    enable_metrics: "True"

  nongridTrace:
    tracedir: "/var/log/rucio/trace"
    brokers: "activemq"
    port: "61616"
    username: "hermes"
    password: "supersecret"
    topic: "/topic/rucio.tracer"

nodeSelector:
  {}
