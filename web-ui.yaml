# Default values for rucio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## replicaCount gives the number of server pods to run
replicaCount: 1

# When set, run extra busybox containers in the relevant pods to also expose the error logs
exposeErrorLogs: True

service: 
  type: NodePort
  # Run the webui server on port 443 instead of 80 and accept X509 certificates and proxies
  useSSL: true
  port: 443
  targetPort: https
  portName: https

image:
  repository: rucio/rucio-ui
  # Needed until official images are built correctly
  # repository: cmssw/rucio-ui
  tag: release-1.23.11

ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/frontend-entry-points: http, https
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  hosts: 
    - "pic01-rucio-server-web.pic.es"    
  tls:
    - secretName: rucio-web.tls-secret

proxy:
  rucioProxy: "pic01-rucio-server.pic.es"
  rucioProxyScheme: "https"
  rucioAuthProxy: "pic01-rucio-server-auth.pic.es:443"
  rucioAuthProxyScheme: "https"  

additionalSecrets: 
# gcssecret:
#   secretName: gcssecret
#   mountPath: /opt/rucio/etc/gcs_rucio.json
#   subPath: gcs_rucio.json
  usercert:
    secretName: usercert-with-key
    mountPath: /opt/rucio/etc/usercert_with_key.pem
    subPath: usercert_with_key.pem
  certs:
    secretName: certs
    mountPath: /etc/grid-security/certificates


## values used to configure Rucio
config:
  database:
    default: "postgresql://rucio:secret@postgres-postgresql/rucio"
    schema: "test"
  ## Only necessary for webui deployments
  webui:
    ## config.webui.usercert:  (default "/opt/rucio/etc/usercert_with_key.pem")
    usercert: "/opt/rucio/etc/usercert_with_key.pem"

resources:
  limits:
    memory: 1450Mi

